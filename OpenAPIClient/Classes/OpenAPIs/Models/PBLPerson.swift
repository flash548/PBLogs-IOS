//
// PBLPerson.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** PBL Person  */
public struct PBLPerson: Codable, JSONEncodable, Hashable {

    public var branch: Int?
    public var firstName: String
    public var id: UUID
    public var last4: String
    public var lastName: String
    public var organization: String?
    public var pbsUUID: UUID?
    public var rank: Int?

    public init(branch: Int? = nil, firstName: String, id: UUID, last4: String, lastName: String, organization: String? = nil, pbsUUID: UUID? = nil, rank: Int? = nil) {
        self.branch = branch
        self.firstName = firstName
        self.id = id
        self.last4 = last4
        self.lastName = lastName
        self.organization = organization
        self.pbsUUID = pbsUUID
        self.rank = rank
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case branch
        case firstName
        case id
        case last4
        case lastName
        case organization
        case pbsUUID
        case rank
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(branch, forKey: .branch)
        try container.encode(firstName, forKey: .firstName)
        try container.encode(id, forKey: .id)
        try container.encode(last4, forKey: .last4)
        try container.encode(lastName, forKey: .lastName)
        try container.encodeIfPresent(organization, forKey: .organization)
        try container.encodeIfPresent(pbsUUID, forKey: .pbsUUID)
        try container.encodeIfPresent(rank, forKey: .rank)
    }
}

