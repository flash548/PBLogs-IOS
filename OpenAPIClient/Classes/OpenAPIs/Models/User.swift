//
// User.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** User class */
public struct User: Codable, JSONEncodable, Hashable {

    public var info: Person
    /**  */
    public var schedulingUnits: [SchedulingUnit]
    /** An array of orgs with the same parent org */
    public var siblingOrganizations: [UUID]?
    /** Array of roles and permissions */
    public var applicationRoles: [Role]
    public var defaultRole: String
    /**  The organization that user currently has selected. Default is their primary organization. */
    public var selectedOrganizationId: UUID

    public init(info: Person, schedulingUnits: [SchedulingUnit], siblingOrganizations: [UUID]? = nil, applicationRoles: [Role], defaultRole: String, selectedOrganizationId: UUID) {
        self.info = info
        self.schedulingUnits = schedulingUnits
        self.siblingOrganizations = siblingOrganizations
        self.applicationRoles = applicationRoles
        self.defaultRole = defaultRole
        self.selectedOrganizationId = selectedOrganizationId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case info
        case schedulingUnits
        case siblingOrganizations
        case applicationRoles
        case defaultRole
        case selectedOrganizationId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(info, forKey: .info)
        try container.encode(schedulingUnits, forKey: .schedulingUnits)
        try container.encodeIfPresent(siblingOrganizations, forKey: .siblingOrganizations)
        try container.encode(applicationRoles, forKey: .applicationRoles)
        try container.encode(defaultRole, forKey: .defaultRole)
        try container.encode(selectedOrganizationId, forKey: .selectedOrganizationId)
    }
}

