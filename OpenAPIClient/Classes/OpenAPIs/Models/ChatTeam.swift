//
// ChatTeam.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** chat team dto */
public struct ChatTeam: Codable, JSONEncodable, Hashable {

    /** Age of channel in days before reuse */
    public var archiveReuseTime: Double?
    /** display name of chat team */
    public var displayName: String?
    /** Initial post of each new channel created */
    public var initialPost: String
    /** MM ID of chat team */
    public var teamId: String
    /** unique key of chat team  */
    public var id: Int
    /** Unique name of a chat team in Mattermost */
    public var name: String

    public init(archiveReuseTime: Double? = nil, displayName: String? = nil, initialPost: String, teamId: String, id: Int, name: String) {
        self.archiveReuseTime = archiveReuseTime
        self.displayName = displayName
        self.initialPost = initialPost
        self.teamId = teamId
        self.id = id
        self.name = name
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case archiveReuseTime
        case displayName
        case initialPost
        case teamId
        case id
        case name
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(archiveReuseTime, forKey: .archiveReuseTime)
        try container.encodeIfPresent(displayName, forKey: .displayName)
        try container.encode(initialPost, forKey: .initialPost)
        try container.encode(teamId, forKey: .teamId)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
    }
}

