//
// ConflictAllOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ConflictAllOf: Codable, JSONEncodable, Hashable {

    public var reason: ConflictReasonEnum
    public var primaryEvent: EventBase
    public var conflictingEvent: EventBase
    public var personId: UUID
    public var id: UUID

    public init(reason: ConflictReasonEnum, primaryEvent: EventBase, conflictingEvent: EventBase, personId: UUID, id: UUID) {
        self.reason = reason
        self.primaryEvent = primaryEvent
        self.conflictingEvent = conflictingEvent
        self.personId = personId
        self.id = id
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case reason
        case primaryEvent
        case conflictingEvent
        case personId
        case id
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(reason, forKey: .reason)
        try container.encode(primaryEvent, forKey: .primaryEvent)
        try container.encode(conflictingEvent, forKey: .conflictingEvent)
        try container.encode(personId, forKey: .personId)
        try container.encode(id, forKey: .id)
    }
}

