//
// PblRemisUploadRecord.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** upload history of remis imports */
public struct PblRemisUploadRecord: Codable, JSONEncodable, Hashable {

    public var id: UUID?
    public var uploadType: String?
    public var importerName: String?
    public var importerId: UUID?
    public var timeStamp: Date?
    public var successfullyUploaded: Bool?

    public init(id: UUID? = nil, uploadType: String? = nil, importerName: String? = nil, importerId: UUID? = nil, timeStamp: Date? = nil, successfullyUploaded: Bool? = nil) {
        self.id = id
        self.uploadType = uploadType
        self.importerName = importerName
        self.importerId = importerId
        self.timeStamp = timeStamp
        self.successfullyUploaded = successfullyUploaded
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case uploadType
        case importerName
        case importerId
        case timeStamp
        case successfullyUploaded
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(uploadType, forKey: .uploadType)
        try container.encodeIfPresent(importerName, forKey: .importerName)
        try container.encodeIfPresent(importerId, forKey: .importerId)
        try container.encodeIfPresent(timeStamp, forKey: .timeStamp)
        try container.encodeIfPresent(successfullyUploaded, forKey: .successfullyUploaded)
    }
}

