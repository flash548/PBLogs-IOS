//
// ApplicationEntity.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** An entity that contains application roles and permissions */
public struct ApplicationEntity: Codable, JSONEncodable, Hashable {

    /** Application entity id */
    public var applicationEntityId: UUID
    /** A list of application permissions */
    public var permissions: [ApplicationPermission]
    /** Application entity name */
    public var name: String
    /** Application entity namespace */
    public var namespace: String
    /** A list of application roles */
    public var roles: [ApplicationRole]
    /** id of user who created the entry */
    public var createdBy: UUID?
    /** id of user who last modified the entry */
    public var lastModifiedBy: UUID?
    /** date of entry creation */
    public var createdDate: Date?
    /** date entry was last modified */
    public var lastModifiedDate: Date?

    public init(applicationEntityId: UUID, permissions: [ApplicationPermission], name: String, namespace: String, roles: [ApplicationRole], createdBy: UUID? = nil, lastModifiedBy: UUID? = nil, createdDate: Date? = nil, lastModifiedDate: Date? = nil) {
        self.applicationEntityId = applicationEntityId
        self.permissions = permissions
        self.name = name
        self.namespace = namespace
        self.roles = roles
        self.createdBy = createdBy
        self.lastModifiedBy = lastModifiedBy
        self.createdDate = createdDate
        self.lastModifiedDate = lastModifiedDate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case applicationEntityId
        case permissions
        case name
        case namespace
        case roles
        case createdBy
        case lastModifiedBy
        case createdDate
        case lastModifiedDate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(applicationEntityId, forKey: .applicationEntityId)
        try container.encode(permissions, forKey: .permissions)
        try container.encode(name, forKey: .name)
        try container.encode(namespace, forKey: .namespace)
        try container.encode(roles, forKey: .roles)
        try container.encodeIfPresent(createdBy, forKey: .createdBy)
        try container.encodeIfPresent(lastModifiedBy, forKey: .lastModifiedBy)
        try container.encodeIfPresent(createdDate, forKey: .createdDate)
        try container.encodeIfPresent(lastModifiedDate, forKey: .lastModifiedDate)
    }
}

