//
// MissionEventRecord.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/**  */
public struct MissionEventRecord: Codable, JSONEncodable, Hashable {

    /**  */
    public var asInstructor: Bool?
    /**  */
    public var eventID: String
    /**  */
    public var numberAccomplished: Int
    /**  */
    public var id: UUID?

    public init(asInstructor: Bool? = nil, eventID: String, numberAccomplished: Int, id: UUID? = nil) {
        self.asInstructor = asInstructor
        self.eventID = eventID
        self.numberAccomplished = numberAccomplished
        self.id = id
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case asInstructor
        case eventID
        case numberAccomplished
        case id
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(asInstructor, forKey: .asInstructor)
        try container.encode(eventID, forKey: .eventID)
        try container.encode(numberAccomplished, forKey: .numberAccomplished)
        try container.encodeIfPresent(id, forKey: .id)
    }
}

