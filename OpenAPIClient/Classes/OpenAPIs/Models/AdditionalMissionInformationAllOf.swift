//
// AdditionalMissionInformationAllOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AdditionalMissionInformationAllOf: Codable, JSONEncodable, Hashable {

    /**  */
    public var timeApprovedByADO: Date?
    /**  */
    public var timeApprovedByMx: Date?
    /**  */
    public var timeApprovedBySARM: Date?
    /**  */
    public var mxApprovedBy: UUID?
    /**  */
    public var adoApprovedBy: UUID?
    /**  */
    public var sarmApprovedBy: UUID?
    /**  */
    public var timeReceived: Date?
    /**  */
    public var timeRevised: Date?

    public init(timeApprovedByADO: Date? = nil, timeApprovedByMx: Date? = nil, timeApprovedBySARM: Date? = nil, mxApprovedBy: UUID? = nil, adoApprovedBy: UUID? = nil, sarmApprovedBy: UUID? = nil, timeReceived: Date? = nil, timeRevised: Date? = nil) {
        self.timeApprovedByADO = timeApprovedByADO
        self.timeApprovedByMx = timeApprovedByMx
        self.timeApprovedBySARM = timeApprovedBySARM
        self.mxApprovedBy = mxApprovedBy
        self.adoApprovedBy = adoApprovedBy
        self.sarmApprovedBy = sarmApprovedBy
        self.timeReceived = timeReceived
        self.timeRevised = timeRevised
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case timeApprovedByADO
        case timeApprovedByMx
        case timeApprovedBySARM
        case mxApprovedBy
        case adoApprovedBy
        case sarmApprovedBy
        case timeReceived
        case timeRevised
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(timeApprovedByADO, forKey: .timeApprovedByADO)
        try container.encodeIfPresent(timeApprovedByMx, forKey: .timeApprovedByMx)
        try container.encodeIfPresent(timeApprovedBySARM, forKey: .timeApprovedBySARM)
        try container.encodeIfPresent(mxApprovedBy, forKey: .mxApprovedBy)
        try container.encodeIfPresent(adoApprovedBy, forKey: .adoApprovedBy)
        try container.encodeIfPresent(sarmApprovedBy, forKey: .sarmApprovedBy)
        try container.encodeIfPresent(timeReceived, forKey: .timeReceived)
        try container.encodeIfPresent(timeRevised, forKey: .timeRevised)
    }
}

