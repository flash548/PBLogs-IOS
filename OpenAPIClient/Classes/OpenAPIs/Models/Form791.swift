//
// Form791.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/**  */
public struct Form791: Codable, JSONEncodable, Hashable {

    public var fuelGrade: String?
    public var refuelerGrade: String?
    public var refuelerName: String?
    public var tankerDoDAAC: String?
    public var id: UUID?
    /**  */
    public var offloadAircrafts: [OffloadAircraft]?

    public init(fuelGrade: String? = nil, refuelerGrade: String? = nil, refuelerName: String? = nil, tankerDoDAAC: String? = nil, id: UUID? = nil, offloadAircrafts: [OffloadAircraft]? = nil) {
        self.fuelGrade = fuelGrade
        self.refuelerGrade = refuelerGrade
        self.refuelerName = refuelerName
        self.tankerDoDAAC = tankerDoDAAC
        self.id = id
        self.offloadAircrafts = offloadAircrafts
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case fuelGrade
        case refuelerGrade
        case refuelerName
        case tankerDoDAAC
        case id
        case offloadAircrafts
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(fuelGrade, forKey: .fuelGrade)
        try container.encodeIfPresent(refuelerGrade, forKey: .refuelerGrade)
        try container.encodeIfPresent(refuelerName, forKey: .refuelerName)
        try container.encodeIfPresent(tankerDoDAAC, forKey: .tankerDoDAAC)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(offloadAircrafts, forKey: .offloadAircrafts)
    }
}

