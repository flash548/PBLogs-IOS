//
// Metrics.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/**  */
public struct Metrics: Codable, JSONEncodable, Hashable {

    public var airdropWeight: Double?
    public var airlandWeight: Double?
    public var fuelOnloaded: Double?
    public var numAirdropPallets: Int?
    public var numAirlandPallets: Int?
    public var numBoomCycles: Int?
    public var numHeavies: Int?
    public var numJumpers: Int?
    public var numPassengers: Int?
    public var numReceiverContacts: Int?
    public var numRollingStock: Int?
    public var numSeatPallets: Int?

    public init(airdropWeight: Double? = nil, airlandWeight: Double? = nil, fuelOnloaded: Double? = nil, numAirdropPallets: Int? = nil, numAirlandPallets: Int? = nil, numBoomCycles: Int? = nil, numHeavies: Int? = nil, numJumpers: Int? = nil, numPassengers: Int? = nil, numReceiverContacts: Int? = nil, numRollingStock: Int? = nil, numSeatPallets: Int? = nil) {
        self.airdropWeight = airdropWeight
        self.airlandWeight = airlandWeight
        self.fuelOnloaded = fuelOnloaded
        self.numAirdropPallets = numAirdropPallets
        self.numAirlandPallets = numAirlandPallets
        self.numBoomCycles = numBoomCycles
        self.numHeavies = numHeavies
        self.numJumpers = numJumpers
        self.numPassengers = numPassengers
        self.numReceiverContacts = numReceiverContacts
        self.numRollingStock = numRollingStock
        self.numSeatPallets = numSeatPallets
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case airdropWeight
        case airlandWeight
        case fuelOnloaded
        case numAirdropPallets
        case numAirlandPallets
        case numBoomCycles
        case numHeavies
        case numJumpers
        case numPassengers
        case numReceiverContacts
        case numRollingStock
        case numSeatPallets
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(airdropWeight, forKey: .airdropWeight)
        try container.encodeIfPresent(airlandWeight, forKey: .airlandWeight)
        try container.encodeIfPresent(fuelOnloaded, forKey: .fuelOnloaded)
        try container.encodeIfPresent(numAirdropPallets, forKey: .numAirdropPallets)
        try container.encodeIfPresent(numAirlandPallets, forKey: .numAirlandPallets)
        try container.encodeIfPresent(numBoomCycles, forKey: .numBoomCycles)
        try container.encodeIfPresent(numHeavies, forKey: .numHeavies)
        try container.encodeIfPresent(numJumpers, forKey: .numJumpers)
        try container.encodeIfPresent(numPassengers, forKey: .numPassengers)
        try container.encodeIfPresent(numReceiverContacts, forKey: .numReceiverContacts)
        try container.encodeIfPresent(numRollingStock, forKey: .numRollingStock)
        try container.encodeIfPresent(numSeatPallets, forKey: .numSeatPallets)
    }
}

