//
// Issue.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Issue: Codable, JSONEncodable, Hashable {

    public var aircraftCallSign: String?
    public var aircraftCodeAndHomeStation: String?
    public var aircraftCommand: String?
    public var aircraftNumber: String?
    public var aircraftType: String?
    public var dateCreated: Date?
    public var quantityIssuedPounds: Double?
    public var id: UUID?

    public init(aircraftCallSign: String? = nil, aircraftCodeAndHomeStation: String? = nil, aircraftCommand: String? = nil, aircraftNumber: String? = nil, aircraftType: String? = nil, dateCreated: Date? = nil, quantityIssuedPounds: Double? = nil, id: UUID? = nil) {
        self.aircraftCallSign = aircraftCallSign
        self.aircraftCodeAndHomeStation = aircraftCodeAndHomeStation
        self.aircraftCommand = aircraftCommand
        self.aircraftNumber = aircraftNumber
        self.aircraftType = aircraftType
        self.dateCreated = dateCreated
        self.quantityIssuedPounds = quantityIssuedPounds
        self.id = id
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case aircraftCallSign
        case aircraftCodeAndHomeStation
        case aircraftCommand
        case aircraftNumber
        case aircraftType
        case dateCreated
        case quantityIssuedPounds
        case id
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(aircraftCallSign, forKey: .aircraftCallSign)
        try container.encodeIfPresent(aircraftCodeAndHomeStation, forKey: .aircraftCodeAndHomeStation)
        try container.encodeIfPresent(aircraftCommand, forKey: .aircraftCommand)
        try container.encodeIfPresent(aircraftNumber, forKey: .aircraftNumber)
        try container.encodeIfPresent(aircraftType, forKey: .aircraftType)
        try container.encodeIfPresent(dateCreated, forKey: .dateCreated)
        try container.encodeIfPresent(quantityIssuedPounds, forKey: .quantityIssuedPounds)
        try container.encodeIfPresent(id, forKey: .id)
    }
}

