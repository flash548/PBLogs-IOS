//
// EventFieldAllOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct EventFieldAllOf: Codable, JSONEncodable, Hashable {

    /**  */
    public var id: UUID?
    /**  */
    public var fieldType: String?
    /** label for field */
    public var name: String?
    /**  */
    public var active: Bool?
    /**  */
    public var eventTypeId: Int?
    /**  */
    public var index: Int

    public init(id: UUID? = nil, fieldType: String? = nil, name: String? = nil, active: Bool? = nil, eventTypeId: Int? = nil, index: Int) {
        self.id = id
        self.fieldType = fieldType
        self.name = name
        self.active = active
        self.eventTypeId = eventTypeId
        self.index = index
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case fieldType
        case name
        case active
        case eventTypeId
        case index
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(fieldType, forKey: .fieldType)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(active, forKey: .active)
        try container.encodeIfPresent(eventTypeId, forKey: .eventTypeId)
        try container.encode(index, forKey: .index)
    }
}

