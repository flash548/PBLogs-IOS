//
// UploadedPerson.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Result of a single row from the batch upload spreadsheet */
public struct UploadedPerson: Codable, JSONEncodable, Hashable {

    public enum UploadResult: String, Codable, CaseIterable {
        case added = "ADDED"
        case alreadyExisted = "ALREADY_EXISTED"
        case noDodid = "NO_DODID"
        case noOrgAssigned = "NO_ORG_ASSIGNED"
    }
    /** The result of this person */
    public var uploadResult: UploadResult
    public var person: Person?
    /** Row number from the source spreadsheet */
    public var row: Int
    /** Any information as to why this person was not newly created */
    public var errorString: String

    public init(uploadResult: UploadResult, person: Person? = nil, row: Int, errorString: String) {
        self.uploadResult = uploadResult
        self.person = person
        self.row = row
        self.errorString = errorString
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case uploadResult
        case person
        case row
        case errorString
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(uploadResult, forKey: .uploadResult)
        try container.encodeIfPresent(person, forKey: .person)
        try container.encode(row, forKey: .row)
        try container.encode(errorString, forKey: .errorString)
    }
}

