//
// NewFeature.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** New feature to be shown on the new feature modal  */
public struct NewFeature: Codable, JSONEncodable, Hashable {

    /** New feature name  */
    public var name: String
    /** Description of new feature  */
    public var description: String
    /** Svg file of new feature icon  */
    public var icon: String
    /** New feature id */
    public var id: UUID
    /** Time for new feature to stop being displayed on modal  */
    public var endTime: Date
    /** Date for feature to be displayed on modal  */
    public var startTime: Date
    /** id of user who created the entry */
    public var createdBy: UUID?
    /** id of user who last modified the entry */
    public var lastModifiedBy: UUID?
    /** date of entry creation */
    public var createdDate: Date?
    /** date entry was last modified */
    public var lastModifiedDate: Date?

    public init(name: String, description: String, icon: String, id: UUID, endTime: Date, startTime: Date, createdBy: UUID? = nil, lastModifiedBy: UUID? = nil, createdDate: Date? = nil, lastModifiedDate: Date? = nil) {
        self.name = name
        self.description = description
        self.icon = icon
        self.id = id
        self.endTime = endTime
        self.startTime = startTime
        self.createdBy = createdBy
        self.lastModifiedBy = lastModifiedBy
        self.createdDate = createdDate
        self.lastModifiedDate = lastModifiedDate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case description
        case icon
        case id
        case endTime
        case startTime
        case createdBy
        case lastModifiedBy
        case createdDate
        case lastModifiedDate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(description, forKey: .description)
        try container.encode(icon, forKey: .icon)
        try container.encode(id, forKey: .id)
        try container.encode(endTime, forKey: .endTime)
        try container.encode(startTime, forKey: .startTime)
        try container.encodeIfPresent(createdBy, forKey: .createdBy)
        try container.encodeIfPresent(lastModifiedBy, forKey: .lastModifiedBy)
        try container.encodeIfPresent(createdDate, forKey: .createdDate)
        try container.encodeIfPresent(lastModifiedDate, forKey: .lastModifiedDate)
    }
}

